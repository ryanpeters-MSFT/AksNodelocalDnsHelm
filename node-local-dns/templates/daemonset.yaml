apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ include "node-local-dns.fullname" . }}-local-dns
  labels:
    k8s-app: node-local-dns
  {{- include "node-local-dns.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      k8s-app: node-local-dns
  template:
    metadata:
      labels:
        k8s-app: node-local-dns
      {{- include "node-local-dns.selectorLabels" . | nindent 8 }}
      annotations:
        prometheus.io/port: "9253"
        prometheus.io/scrape: "true"
    spec:
      containers:
      - args: {{- toYaml .Values.localDns.nodeCache.args | nindent 8 }}
        env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.localDns.nodeCache.image.repository }}:{{ .Values.localDns.nodeCache.image.tag
          | default .Chart.AppVersion }}
        livenessProbe:
          httpGet:
            host: {{ .Values.localDns.localip }}
            path: /health
            port: 8080
          initialDelaySeconds: 60
          timeoutSeconds: 5
        name: node-cache
        ports:
        - containerPort: 53
          name: dns
          protocol: UDP
        - containerPort: 53
          name: dns-tcp
          protocol: TCP
        - containerPort: 9253
          name: metrics
          protocol: TCP
        resources: {{- toYaml .Values.localDns.nodeCache.resources | nindent 10 }}
        securityContext: {{- toYaml .Values.localDns.nodeCache.containerSecurityContext
          | nindent 10 }}
        volumeMounts:
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /etc/coredns
          name: config-volume
        - mountPath: /etc/kube-dns
          name: kube-dns-config
      dnsPolicy: Default
      hostNetwork: true
      serviceAccountName: {{ include "node-local-dns.fullname" . }}-local-dns
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        operator: Exists
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - configMap:
          name: kube-dns
          optional: true
        name: kube-dns-config
      - configMap:
          items:
          - key: Corefile
            path: Corefile.base
          name: {{ include "node-local-dns.fullname" . }}-local-dns
        name: config-volume